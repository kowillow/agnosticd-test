---
# Implement your Pre Workload deployment tasks here
## FROM agnosticd/ansible/configs/ocp4-workshop/pre_software.yml 
      
## FROM agnosticd/ansible/configs/ocp4-workshop/software.yml

- name: Fetch kube config
  fetch:
    flat: true
    src: /home/{{ ansible_user }}/{{ cluster_name }}/auth/{{ item }}
    dest: "{{ hostvars.localhost.output_dir }}/{{ env_type }}_{{ guid }}_{{ item }}"
  loop:
  - kubeconfig
  - kubeadmin-password

- name: Make sure .kube directory exists in home directory
  file:
    state: directory
    path: "/home/{{ ansible_user }}/.kube"
    owner: "{{ ansible_user }}"
    mode: 0775

- name: Set up .kube/config
  copy:
    remote_src: true
    src: "/home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeconfig"
    dest: "/home/{{ ansible_user }}/.kube/config"

- name: Make sure .kube directory exists in /root
  file:
    state: directory
    path: /root/.kube
    owner: root
    mode: 0700
  become: true

- name: Set up .kube/config for root
  copy:
    remote_src: true
    src: "/home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeconfig"
    dest: /root/.kube/config
  become: true

- name: Get kubeadmin password
  slurp:
    path: /home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeadmin-password
  register: kubeadminr

- name: Get console route
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeconfig
  command: oc get route -n openshift-console console -o json
  register: routeconsole
  retries: 10
  delay: 30
  until: routeconsole is succeeded
  ignore_errors: true

- name: Set webconsole address
  set_fact:
    webconsole: "http://{{ routeconsole.stdout | from_json | json_query('spec.host') }}"
  when: routeconsole is succeeded

# sometimes the route is not ready, guess it
- name: Guess webconsole address
  set_fact:
    webconsole: "http://console-openshift-console.apps.{{ cluster_name }}.{{ guid }}.{{ subdomain_base }}"
  when: routeconsole is failed

- name: Get API for command line
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeconfig
  command: oc whoami --show-server
  register: r_showserver

- name: Set openshift_api_url
  set_fact:
    openshift_api_url: "{{ r_showserver.stdout | trim }}"

- name: Print Overview
  agnosticd_user_info:
    data:
      openshift_console_url: "{{ webconsole }}"
      openshift_api_url: "{{ openshift_api_url }}"

##### Leave this as the last task in the playbook. #####
- name: pre_workload tasks complete
  debug:
    msg: "Pre-Workload tasks completed successfully."
  when: not silent|bool
